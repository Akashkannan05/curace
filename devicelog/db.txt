use DataBase


db.createCollection("device_record", {
  timeseries: {
    timeField: "timestamp",
    metaField: "topic",
    granularity: "seconds"
  },
  storageEngine: {
    wiredTiger: {
      configString: "block_compressor=zstd"
    }
  }
})


db.sensor_readings.createIndex(
  { timestamp: 1 },
  { expireAfterSeconds: 604800 } // 7 days
)



[Unit]
Description=MQTT Subscriber Service
After=network.target

[Service]
# Use the Python interpreter from your venv
ExecStart=/var/www/curace-iot/curace/venv/bin/python /var/www/curace-iot/curace/devicelog/subscriber.py

WorkingDirectory= /var/www/curace-iot/curace/devicelog/
Restart=always
RestartSec=5
Environment=PYTHONUNBUFFERED=1

[Install]
WantedBy=multi-user.target








sudo nano /etc/systemd/system/mqtt-subscriber.service
mongo -u ozopool_iot -p Faraday@2023 --authenticationDatabase ozopool_iot
cd /etc/systemd/system/

sudo cp /var/www/curace-iot/curace/devicelog/subscriber.py /opt/mqtt_subscriber_iot/subscriber.py




sudo mkdir -p /opt/mqtt_subscriber
sudo cp /home/akash/subscriber.py /opt/mqtt_subscriber/subscriber.py
sudo chmod +x /opt/mqtt_subscriber/subscriber.py


sudo nano /etc/systemd/system/ozopool_iot.service
sudo systemctl enable ozopool_iot
sudo systemctl start ozopool_iot
systemctl status ozopool_iot
journalctl -u ozopool_iot -f



[Unit]
Description=Ozopool-IOT API service
After=network.target

[Service]
ExecStart=/var/www/curace-iot/curace/venv/bin/python /var/www/curace-iot/curace/app.py
WorkingDirectory=/var/www/curace-iot/curace/
Restart=always
RestartSec=5
Environment=PYTHONUNBUFFERED=1

[Install]
WantedBy=multi-user.target



sudo nano /etc/systemd/system/flaskapi.service
[Unit]
Description=Gunicorn Flask Ozopool API
After=network.target

[Service]
Group=www-data
WorkingDirectory=/var/www/curace-iot/curace/
Environment="PATH=/var/www/curace-iot/curace/venv/bin"
ExecStart=/var/www/curace-iot/curace/venv/bin/gunicorn -w 4 -b 127.0.0.1:8000 app:app
Restart=always

[Install]
WantedBy=multi-user.target

sudo nano /etc/systemd/system/ozopoolapi.service


nano ozopool_iot.conf
/etc/nginx/sites-available/peak_




server {
    listen 80;
    server_name skid.ozoman.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name skid.ozoman.com;

    ssl_certificate /etc/letsencrypt/live/skid.ozoman.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/skid.ozoman.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

    # Define the root directory for your project
    root /var/www/html/skid/backend;
    index index.html;  # You can add other index files as needed


        location /emqx/ {
        proxy_pass http://localhost:18083/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/var/www/html/skid/backend/app.sock;

        # Increase timeout settings
        proxy_connect_timeout 600s;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }
}


server {
    listen 80;
    server_name  api.ozopool.in;

location / {
        include proxy_params;
        proxy_pass http://unix:/var/www/curace-iot/curace/ozopoolapi.sock;
        

        # Increase timeout settings
        proxy_connect_timeout 600s;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }
}

sudo ln -s /etc/nginx/sites-available/ozopoolapi.conf /etc/nginx/sites-enabled/
/etc/nginx/sites-available# sudo nginx -t
sudo systemctl restart nginx
sudo ufw status->Status: inactive
sudo tail /var/log/nginx/error.log





sudo systemctl restart ozopoolapi





sudo apt update
sudo apt install certbot python3-certbot-nginx -y
sudo certbot --nginx -d api.ozopool.in